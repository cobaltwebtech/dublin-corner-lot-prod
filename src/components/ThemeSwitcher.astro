---
import { Icon } from "astro-icon/components";
---

<button id="theme-switcher" type="button" class="ml-0 origin-[right_center]">
  <div id="icon-theme-light">
    <Icon name="white-balance-sunny" class="size-6" />
    <span class="sr-only">Use light theme</span>
  </div>
  <div id="icon-theme-dark" class="hidden">
    <Icon name="weather-night" class="size-6" />
    <span class="sr-only">Use dark theme</span>
  </div>
</button>

<script>
  import invariant from "tiny-invariant";

  const themes = ["light", "dark"];
  const button = document.querySelector("#theme-switcher");
  invariant(button, "button should not be null");

  const getThemeCurrent = () =>
    document.documentElement.classList.contains("dark") ? "dark" : "light";
  const getThemeNext = () => {
    const themeCurrent = getThemeCurrent();
    const indexThemeCurrent = themes.indexOf(themeCurrent);
    return themes[(indexThemeCurrent + 1) % themes.length];
  };

  const updateIcon = () => {
    const themeCurrent = getThemeCurrent();
    document
      .querySelector(`#icon-theme-${themeCurrent}`)
      ?.classList.add("hidden");
    const themeNext = getThemeNext();
    document
      .querySelector(`#icon-theme-${themeNext}`)
      ?.classList.remove("hidden");
  };

  button.addEventListener("click", () => {
    const themeNext = getThemeNext();
    if (themeNext === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    localStorage.setItem("theme", themeNext);
    updateIcon();
  });

  updateIcon();
</script>
